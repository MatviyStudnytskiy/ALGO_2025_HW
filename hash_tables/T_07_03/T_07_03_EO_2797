EMPTY = None

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

class HashSet:
    def __init__(self, size=200003):
        self._size = size
        self._keys = [EMPTY] * size
        self._count = 0

    def hash(self, key):
        return key % self._size

    def insert(self, key):
        i = self.hash(key)
        while self._keys[i] is not EMPTY:
            if self._keys[i] == key:
                return  # Exists
            i = (i + 1) % self._size
        self._keys[i] = key
        self._count += 1

    def count(self):
        return self._count

# Read and solve:
if __name__ == "__main__":
    n = int(input())
    numbers = list(map(int, input().split()))
    
    hs = HashSet()
    for num in numbers:
        hs.insert(num)

    print(hs.count())
